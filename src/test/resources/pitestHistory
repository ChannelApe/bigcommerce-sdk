39
<classHistory><id hierarchicalHash="5891e99d"><classId hash="1485957533"><name><name>com/bigcommerce/catalog/models/DateTimeAdapter</name></name></classId></id><coverageId>157c98398</coverageId></classHistory>
<classHistory><id hierarchicalHash="f2402ab9"><classId hash="4064291513"><name><name>com/bigcommerce/catalog/models/DateTimeAdapterTest</name></name></classId></id><coverageId>f2402ab9</coverageId></classHistory>
<classHistory><id hierarchicalHash="d58e2544"><classId hash="3582862660"><name><name>com/bigcommerce/catalog/models/LineItem</name></name></classId></id><coverageId>11655333d</coverageId></classHistory>
<classHistory><id hierarchicalHash="18a8f166"><classId hash="413725030"><name><name>com/bigcommerce/catalog/models/ShipmentLineItem</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="f208a6f6"><classId hash="4060653302"><name><name>com/bigcommerce/catalog/models/VariantResponse</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="eb528013"><classId hash="3948052499"><name><name>com/bigcommerce/catalog/models/ShipmentResponse</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="18d39f189"><classId hash="2708439998"><name><name>com/bigcommerce/BigcommerceSdk$RequestRetryTimeoutStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="35137c0b"><classId hash="890469387"><name><name>com/bigcommerce/catalog/models/OrdersResponse</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="6bd07f93"><classId hash="1808826259"><name><name>com/bigcommerce/catalog/models/Address</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="7e967426"><classId hash="2123789350"><name><name>com/bigcommerce/catalog/models/CatalogSummary</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="162c8dc2b"><classId hash="1996385888"><name><name>com/bigcommerce/BigcommerceSdk$AccessTokenStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="658958df"><classId hash="1703499999"><name><name>com/bigcommerce/BigcommerceSdkTest</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="1e852dd3e"><classId hash="4236799859"><name><name>com/bigcommerce/BigcommerceSdk$StoreHashStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="2fad4dbf"><classId hash="799886783"><name><name>com/bigcommerce/catalog/models/Variant</name></name></classId></id><coverageId>8c5d5bf3</coverageId></classHistory>
<classHistory><id hierarchicalHash="f021df8a"><classId hash="72839615"><name><name>com/bigcommerce/BigcommerceSdk$ClientIdStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="41378977"><classId hash="1094158711"><name><name>com/bigcommerce/catalog/models/Meta</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="b950327e"><classId hash="3109040766"><name><name>com/bigcommerce/catalog/models/ProductsResponse</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="3897b818"><classId hash="949467160"><name><name>com/bigcommerce/catalog/models/CatalogSummaryResponse</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="119f90866"><classId hash="774806171"><name><name>com/bigcommerce/BigcommerceSdk$1</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="b0cbda5e"><classId hash="2966149726"><name><name>com/bigcommerce/catalog/models/LineItemTest</name></name></classId></id><coverageId>b0cbda5e</coverageId></classHistory>
<classHistory><id hierarchicalHash="26d40314"><classId hash="651428628"><name><name>com/bigcommerce/catalog/models/VariantTest</name></name></classId></id><coverageId>26d40314</coverageId></classHistory>
<classHistory><id hierarchicalHash="160817746"><classId hash="1958152571"><name><name>com/bigcommerce/BigcommerceSdk$2</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="15ef0e816"><classId hash="1931901515"><name><name>com/bigcommerce/BigcommerceSdk$ApiUrlStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="8bc5a9d"><classId hash="146561693"><name><name>com/bigcommerce/catalog/models/Pagination</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="ebca6dcb"><classId hash="3955912139"><name><name>com/bigcommerce/BigcommerceSdk</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="7cc5e3a1"><classId hash="2093343649"><name><name>com/bigcommerce/catalog/models/Customer</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="15ea7f45"><classId hash="367689541"><name><name>com/bigcommerce/catalog/models/LineItemsResponse</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="afe28a9b"><classId hash="2950859419"><name><name>com/bigcommerce/catalog/models/Links</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="10b27d2e"><classId hash="280132910"><name><name>com/bigcommerce/catalog/models/Order</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="148e0b586"><classId hash="1561741243"><name><name>com/bigcommerce/BigcommerceSdk$BuildStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="c396381f"><classId hash="3281401887"><name><name>com/bigcommerce/exceptions/BigcommerceErrorResponseException</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="b3107df3"><classId hash="3004202483"><name><name>com/bigcommerce/catalog/models/AddressResponse</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="1b106434f"><classId hash="3309032836"><name><name>com/bigcommerce/BigcommerceSdk$ResponseWaitStrategy</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="d807fd"><classId hash="14157821"><name><name>com/bigcommerce/catalog/models/Products</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="2bcf6fed"><classId hash="735014893"><name><name>com/bigcommerce/catalog/models/Shipment</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="4ccbc54b"><classId hash="1288422731"><name><name>com/bigcommerce/catalog/models/Store</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="1ba071f26"><classId hash="3460084059"><name><name>com/bigcommerce/BigcommerceSdk$Steps</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="33c746e2"><classId hash="868697826"><name><name>com/bigcommerce/catalog/models/Product</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<classHistory><id hierarchicalHash="c5789b4a"><classId hash="3313015626"><name><name>com/bigcommerce/exceptions/BigcommerceException</name></name></classId></id><coverageId>658958df</coverageId></classHistory>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>buildResponseRetyer</name></method><methodDesc>()Lcom/github/rholder/retry/Retryer;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomeVariantWithInvalidIdWhenUpdatingVariantThenThrowNewBigcommerceErrorResponseException(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>get</name></method><methodDesc>(Ljavax/ws/rs/client/WebTarget;Ljava/lang/Class;)Ljava/lang/Object;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenValidCredentialsWhenRetrievingCatalogSummaryThenReturnCatalogSummary(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>getAccessToken</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenStoreHashAndClientIdAndAccessTokenWhenBuildingBigcommerceSdkThenReturnBigcommerceSdkWithCorrectValues(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>getCatalogSummary</name></method><methodDesc>()Lcom/bigcommerce/catalog/models/CatalogSummary;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenValidCredentialsWhenRetrievingCatalogSummaryThenReturnCatalogSummary(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>getClientId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenStoreHashAndClientIdAndAccessTokenWhenBuildingBigcommerceSdkThenReturnBigcommerceSdkWithCorrectValues(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>getCustomer</name></method><methodDesc>(I)Lcom/bigcommerce/catalog/models/Customer;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenValidCustomerIdThenReturnValidCustomer(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>getLineItems</name></method><methodDesc>(II)Ljava/util/List;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenValidOrderIdThenReturnLineItemsForOrder(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>getLineItems</name></method><methodDesc>(III)Ljava/util/List;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenValidOrderIdThenReturnLineItemsForOrder(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>getLineItems</name></method><methodDesc>(III)Ljava/util/List;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenValidOrderIdThenReturnLineItemsForOrder(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>getOrders</name></method><methodDesc>(I)Ljava/util/List;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomePageWhenRetrievingOrdersThenReturnOrders(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>getOrders</name></method><methodDesc>(IILorg/joda/time/DateTime;)Ljava/util/List;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomePageWhenRetrievingOrdersAndDateInTheFutureThenReturnNoContent(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>getOrders</name></method><methodDesc>(IILorg/joda/time/DateTime;)Ljava/util/List;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomePageWhenRetrievingOrdersAndDateInTheFutureThenReturnNoContent(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>getOrders</name></method><methodDesc>(ILorg/joda/time/DateTime;)Ljava/util/List;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomePageWhenRetrievingOrdersAndDateInTheFutureThenReturnNoContent(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>getProducts</name></method><methodDesc>(I)Lcom/bigcommerce/catalog/models/Products;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomePageWhenRetrievingProductsThenReturnProducts(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>getProducts</name></method><methodDesc>(II)Lcom/bigcommerce/catalog/models/Products;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomePageWhenRetrievingProductsThenReturnProducts(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>getShipments</name></method><methodDesc>(II)Ljava/util/List;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenOrderWithShipmentsThenReturnShipments(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>getShipments</name></method><methodDesc>(III)Ljava/util/List;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenOrderWithShipmentsThenReturnShipments(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>getShipments</name></method><methodDesc>(III)Ljava/util/List;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenOrderWithShipmentsThenReturnShipments(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>getShippingAddress</name></method><methodDesc>(I)Lcom/bigcommerce/catalog/models/Address;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenValidOrderThenReturnFirstShippingAddress(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>getShippingAddress</name></method><methodDesc>(I)Lcom/bigcommerce/catalog/models/Address;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenValidOrderThenReturnFirstShippingAddress(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>getStore</name></method><methodDesc>()Lcom/bigcommerce/catalog/models/Store;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenCorrectlyConfiguredBigcommerceSdkReturnStore(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>getStoreHash</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenStoreHashAndClientIdAndAccessTokenWhenBuildingBigcommerceSdkThenReturnBigcommerceSdkWithCorrectValues(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>handleResponse</name></method><methodDesc>(Ljavax/ws/rs/core/Response;Ljava/lang/Class;[Ljavax/ws/rs/core/Response$Status;)Ljava/lang/Object;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomeVariantWithInvalidIdWhenUpdatingVariantThenThrowNewBigcommerceErrorResponseException(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>handleResponse</name></method><methodDesc>(Ljavax/ws/rs/core/Response;Ljava/lang/Class;[Ljavax/ws/rs/core/Response$Status;)Ljava/lang/Object;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenValidCredentialsWhenRetrievingCatalogSummaryThenReturnCatalogSummary(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>invokeResponseCallable</name></method><methodDesc>(Ljava/util/concurrent/Callable;)Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomeVariantWithInvalidIdWhenUpdatingVariantThenThrowNewBigcommerceErrorResponseException(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>newBuilder</name></method><methodDesc>()Lcom/bigcommerce/BigcommerceSdk$StoreHashStep;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenStoreHashAndClientIdAndAccessTokenWhenBuildingBigcommerceSdkThenReturnBigcommerceSdkWithCorrectValues(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>newSandboxBuilder</name></method><methodDesc>()Lcom/bigcommerce/BigcommerceSdk$ApiUrlStep;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomeVariantWithInvalidIdWhenUpdatingVariantThenThrowNewBigcommerceErrorResponseException(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>put</name></method><methodDesc>(Ljavax/ws/rs/client/WebTarget;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomeVariantWhenUpdatingVariantThenUpdateVariant(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>shouldRetryResponse</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomeVariantWithInvalidIdWhenUpdatingVariantThenThrowNewBigcommerceErrorResponseException(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>shouldRetryResponse</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomeVariantWithInvalidIdWhenUpdatingVariantThenThrowNewBigcommerceErrorResponseException(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>shouldRetryResponse</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomeVariantWithInvalidIdWhenUpdatingVariantThenThrowNewBigcommerceErrorResponseException(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>shouldRetryResponse</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomePageAndBigCommerceReturnsTooManyRequestsWhenRetrievingProductsThenRetryAndEventuallyThrowNewBigcommerceException(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk</name></clazz><method><name>updateVariant</name></method><methodDesc>(Lcom/bigcommerce/catalog/models/Variant;)Lcom/bigcommerce/catalog/models/Variant;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomeVariantWhenUpdatingVariantThenUpdateVariant(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk$2</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomeVariantWithInvalidIdWhenUpdatingVariantThenThrowNewBigcommerceErrorResponseException(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk$ResponseWaitStrategy</name></clazz><method><name>computeSleepTime</name></method><methodDesc>(Lcom/github/rholder/retry/Attempt;)J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk$ResponseWaitStrategy</name></clazz><method><name>computeSleepTime</name></method><methodDesc>(Lcom/github/rholder/retry/Attempt;)J</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk$ResponseWaitStrategy</name></clazz><method><name>computeSleepTime</name></method><methodDesc>(Lcom/github/rholder/retry/Attempt;)J</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk$ResponseWaitStrategy</name></clazz><method><name>computeSleepTime</name></method><methodDesc>(Lcom/github/rholder/retry/Attempt;)J</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk$ResponseWaitStrategy</name></clazz><method><name>computeSleepTime</name></method><methodDesc>(Lcom/github/rholder/retry/Attempt;)J</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk$ResponseWaitStrategy</name></clazz><method><name>computeSleepTime</name></method><methodDesc>(Lcom/github/rholder/retry/Attempt;)J</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk$Steps</name></clazz><method><name>build</name></method><methodDesc>()Lcom/bigcommerce/BigcommerceSdk;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenStoreHashAndClientIdAndAccessTokenWhenBuildingBigcommerceSdkThenReturnBigcommerceSdkWithCorrectValues(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk$Steps</name></clazz><method><name>withAccessToken</name></method><methodDesc>(Ljava/lang/String;)Lcom/bigcommerce/BigcommerceSdk$BuildStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenStoreHashAndClientIdAndAccessTokenWhenBuildingBigcommerceSdkThenReturnBigcommerceSdkWithCorrectValues(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk$Steps</name></clazz><method><name>withApiUrl</name></method><methodDesc>(Ljava/lang/String;)Lcom/bigcommerce/BigcommerceSdk$RequestRetryTimeoutStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomeVariantWithInvalidIdWhenUpdatingVariantThenThrowNewBigcommerceErrorResponseException(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk$Steps</name></clazz><method><name>withClientId</name></method><methodDesc>(Ljava/lang/String;)Lcom/bigcommerce/BigcommerceSdk$AccessTokenStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenStoreHashAndClientIdAndAccessTokenWhenBuildingBigcommerceSdkThenReturnBigcommerceSdkWithCorrectValues(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk$Steps</name></clazz><method><name>withRequestRetryTimeout</name></method><methodDesc>(JLjava/util/concurrent/TimeUnit;)Lcom/bigcommerce/BigcommerceSdk$StoreHashStep;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomeVariantWithInvalidIdWhenUpdatingVariantThenThrowNewBigcommerceErrorResponseException(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk$Steps</name></clazz><method><name>withStoreHash</name></method><methodDesc>(Ljava/lang/String;)Lcom/bigcommerce/BigcommerceSdk$ClientIdStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenStoreHashAndClientIdAndAccessTokenWhenBuildingBigcommerceSdkThenReturnBigcommerceSdkWithCorrectValues(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getCity</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getState</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getStreet1</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getStreet2</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getZip</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/CatalogSummary</name></clazz><method><name>getAverageVariantPrice</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/CatalogSummary</name></clazz><method><name>getHighestVariantPrice</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/CatalogSummary</name></clazz><method><name>getInventoryCount</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/CatalogSummary</name></clazz><method><name>getInventoryValue</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/CatalogSummary</name></clazz><method><name>getVariantCount</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/CatalogSummaryResponse</name></clazz><method><name>getData</name></method><methodDesc>()Lcom/bigcommerce/catalog/models/CatalogSummary;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Customer</name></clazz><method><name>getEmail</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Customer</name></clazz><method><name>getFirstName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Customer</name></clazz><method><name>getLastName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/DateTimeAdapter</name></clazz><method><name>marshal</name></method><methodDesc>(Lorg/joda/time/DateTime;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getBaseCostPrice</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenValidOrderIdThenReturnLineItemsForOrder(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getBasePrice</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenValidOrderIdThenReturnLineItemsForOrder(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getBaseTotal</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenValidOrderIdThenReturnLineItemsForOrder(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getBaseWrappingCost</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenValidOrderIdThenReturnLineItemsForOrder(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getBinPickingNumber</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenValidOrderIdThenReturnLineItemsForOrder(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getCostPriceExTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenValidOrderIdThenReturnLineItemsForOrder(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getCostPriceIncTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.catalog.models.LineItemTest.testMutationCoverageIssue(com.bigcommerce.catalog.models.LineItemTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getCostPriceTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenValidOrderIdThenReturnLineItemsForOrder(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenValidOrderIdThenReturnLineItemsForOrder(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getQuantity</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenValidOrderIdThenReturnLineItemsForOrder(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getTotalExTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenValidOrderIdThenReturnLineItemsForOrder(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Links</name></clazz><method><name>getCurrent</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomePageWhenRetrievingProductsThenReturnProducts(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Links</name></clazz><method><name>getNext</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomePageWhenRetrievingProductsThenReturnProducts(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Links</name></clazz><method><name>getPrevious</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomePageWhenRetrievingProductsThenReturnProducts(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Meta</name></clazz><method><name>getPagination</name></method><methodDesc>()Lcom/bigcommerce/catalog/models/Pagination;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getBaseHandlingCost</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getBaseShippingCost</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getBaseWrappingCost</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getCouponDiscount</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getCreditCardType</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getCurrencyCode</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getCurrencyExchangeRate</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getCurrencyId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getDateCreated</name></method><methodDesc>()Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomePageWhenRetrievingOrdersThenReturnOrders(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getDateModified</name></method><methodDesc>()Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomePageWhenRetrievingOrdersThenReturnOrders(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getSubtotalExTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Pagination</name></clazz><method><name>getCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Pagination</name></clazz><method><name>getCurrentPage</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Pagination</name></clazz><method><name>getPerPage</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Pagination</name></clazz><method><name>getTotal</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Pagination</name></clazz><method><name>getTotalPages</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Product</name></clazz><method><name>getDescription</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomePageWhenRetrievingProductsThenReturnProducts(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Product</name></clazz><method><name>getId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomePageWhenRetrievingProductsThenReturnProducts(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Product</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Product</name></clazz><method><name>getSku</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomePageWhenRetrievingProductsThenReturnProducts(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Product</name></clazz><method><name>getType</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomePageWhenRetrievingProductsThenReturnProducts(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Product</name></clazz><method><name>getVariants</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Products</name></clazz><method><name>getPagination</name></method><methodDesc>()Lcom/bigcommerce/catalog/models/Pagination;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomePageWhenRetrievingProductsThenReturnProducts(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Products</name></clazz><method><name>getProducts</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomePageWhenRetrievingProductsThenReturnProducts(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/ProductsResponse</name></clazz><method><name>getData</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomePageWhenRetrievingProductsThenReturnProducts(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/ProductsResponse</name></clazz><method><name>getMeta</name></method><methodDesc>()Lcom/bigcommerce/catalog/models/Meta;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Shipment</name></clazz><method><name>getItems</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenOrderWithShipmentsThenReturnShipments(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Shipment</name></clazz><method><name>getShippingMethod</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenOrderWithShipmentsThenReturnShipments(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Shipment</name></clazz><method><name>getShippingProvider</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenOrderWithShipmentsThenReturnShipments(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Shipment</name></clazz><method><name>getTrackingNumber</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenOrderWithShipmentsThenReturnShipments(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/ShipmentLineItem</name></clazz><method><name>getOrderProductId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/ShipmentLineItem</name></clazz><method><name>getProductId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/ShipmentLineItem</name></clazz><method><name>getQuantity</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Store</name></clazz><method><name>getWeightUnits</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Variant</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.catalog.models.VariantTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.bigcommerce.catalog.models.VariantTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Variant</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.catalog.models.VariantTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.bigcommerce.catalog.models.VariantTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Variant</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.catalog.models.VariantTest.givenSameInstanceWhenTestingEqualityThenReturnTrue(com.bigcommerce.catalog.models.VariantTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Variant</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.catalog.models.VariantTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.bigcommerce.catalog.models.VariantTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Variant</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.catalog.models.VariantTest.givenSameFieldsWhenTestingEqualityThenReturnTrue(com.bigcommerce.catalog.models.VariantTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Variant</name></clazz><method><name>getId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomeVariantWithInvalidIdWhenUpdatingVariantThenThrowNewBigcommerceErrorResponseException(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Variant</name></clazz><method><name>getInventoryLevel</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.catalog.models.VariantTest.givenDifferentFieldWhenTestingEqualityThenReturnFalse(com.bigcommerce.catalog.models.VariantTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Variant</name></clazz><method><name>getMpn</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.catalog.models.VariantTest.givenSameInstanceWhenTestingEqualityThenReturnTrue(com.bigcommerce.catalog.models.VariantTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Variant</name></clazz><method><name>getPrice</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.catalog.models.VariantTest.givenSameInstanceWhenTestingEqualityThenReturnTrue(com.bigcommerce.catalog.models.VariantTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Variant</name></clazz><method><name>getProductId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomeVariantWithInvalidIdWhenUpdatingVariantThenThrowNewBigcommerceErrorResponseException(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Variant</name></clazz><method><name>getSku</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.catalog.models.VariantTest.givenSameInstanceWhenTestingEqualityThenReturnTrue(com.bigcommerce.catalog.models.VariantTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Variant</name></clazz><method><name>getUpc</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.catalog.models.VariantTest.givenSameInstanceWhenTestingEqualityThenReturnTrue(com.bigcommerce.catalog.models.VariantTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Variant</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.catalog.models.VariantTest.givenDifferentFieldWhenTestingEqualityThenReturnFalse(com.bigcommerce.catalog.models.VariantTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/VariantResponse</name></clazz><method><name>getData</name></method><methodDesc>()Lcom/bigcommerce/catalog/models/Variant;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenSomeVariantWhenUpdatingVariantThenUpdateVariant(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/exceptions/BigcommerceErrorResponseException</name></clazz><method><name>buildMessage</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getBillingAddress</name></method><methodDesc>()Lcom/bigcommerce/catalog/models/Address;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getCustomStatus</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getCustomerId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getCustomerMessage</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getDateShipped</name></method><methodDesc>()Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getDefaultCurrencyCode</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getDefaultCurrencyId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getDiscountAmount</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getEbayOrderId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getEmail</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getExternalId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getExternalSource</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getFirstName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getGeoipCountry</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getGeoipCountryIso2</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getGiftCertificateAmount</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getHandlingCostExTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getHandlingCostIncTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getHandlingCostTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getHandlingCostTaxClassId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getIpAddress</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getIsDeleted</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getIsEmailOptIn</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getItemsShipped</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getItemsTotal</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getLastName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getOrderIsDigital</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getOrderSource</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getPaymentMethod</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getPaymentProviderId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getPaymentStatus</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getRefundedAmount</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getShippingAddressCount</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getShippingCostExTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getShippingCostIncTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getShippingCostTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getShippingCostTaxClassId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getStaffNotes</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getStatus</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getStatusId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getStoreCreditAmount</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getSubtotalIncTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getSubtotalTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getTotalExTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getTotalIncTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getTotalTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getWrappingCostExTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getWrappingCostIncTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getWrappingCostTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Order</name></clazz><method><name>getWrappingCostTaxClassId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getEbayItemId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getEbayTransactionId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getEventDate</name></method><methodDesc>()Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getEventName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getExternalId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getFixedShippingCost</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getOptionSetId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getOrderAddressId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getParentOrderProductId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getPriceExTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getPriceIncTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getProductId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getQuantityRefunded</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getQuantityShipped</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getRefundAmount</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getReturnId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getSku</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getTotalIncTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getTotalTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getType</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getWeight</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getWrappingCostExTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getWrappingCostIncTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getWrappingCostTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getWrappingMessage</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>getWrappingName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>isBundledProduct</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/LineItem</name></clazz><method><name>isRefunded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getBaseCost</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getBaseCostExTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getBaseCostIncTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getBaseHandlingCost</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getCompany</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getCostTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getCostTaxClassId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getCountry</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getCountryIso2</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getEmail</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getFirstName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getHandlingCostExTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getHandlingCostIncTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getHandlingCostTax</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getHandlingCostTaxClassId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getItemsShipped</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getItemsTotal</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getLastName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getPhone</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getShippingMethod</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getShippingZoneId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Address</name></clazz><method><name>getShippingZoneName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Customer</name></clazz><method><name>getAcceptsMarketing</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Customer</name></clazz><method><name>getCompany</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Customer</name></clazz><method><name>getCustomerGroupId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Customer</name></clazz><method><name>getDateCreated</name></method><methodDesc>()Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Customer</name></clazz><method><name>getDateModified</name></method><methodDesc>()Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Customer</name></clazz><method><name>getId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Customer</name></clazz><method><name>getNotes</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Customer</name></clazz><method><name>getPhone</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Customer</name></clazz><method><name>getRegistrationIpAddress</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Customer</name></clazz><method><name>getResetPassOnLogin</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Customer</name></clazz><method><name>getStoreCredit</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Customer</name></clazz><method><name>getTaxExemptCategory</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/DateTimeAdapter</name></clazz><method><name>marshal</name></method><methodDesc>(Lorg/joda/time/DateTime;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.catalog.models.DateTimeAdapterTest.givenNullDateToMarshalThenReturnNullValue(com.bigcommerce.catalog.models.DateTimeAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/DateTimeAdapter</name></clazz><method><name>marshal</name></method><methodDesc>(Lorg/joda/time/DateTime;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.catalog.models.DateTimeAdapterTest.givenNullDateToMarshalThenReturnNullValue(com.bigcommerce.catalog.models.DateTimeAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/DateTimeAdapter</name></clazz><method><name>unmarshal</name></method><methodDesc>(Ljava/lang/String;)Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.catalog.models.DateTimeAdapterTest.givenNullDateStringToUnmarshalThenReturnNullValue(com.bigcommerce.catalog.models.DateTimeAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/DateTimeAdapter</name></clazz><method><name>unmarshal</name></method><methodDesc>(Ljava/lang/String;)Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.catalog.models.DateTimeAdapterTest.givenNullDateStringToUnmarshalThenReturnNullValue(com.bigcommerce.catalog.models.DateTimeAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/DateTimeAdapter</name></clazz><method><name>unmarshal</name></method><methodDesc>(Ljava/lang/String;)Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.catalog.models.DateTimeAdapterTest.givenRFC822DateFormatStringWhenUnmarshalingThenReturnDateTime(com.bigcommerce.catalog.models.DateTimeAdapterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Shipment</name></clazz><method><name>getComments</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Shipment</name></clazz><method><name>getDateCreated</name></method><methodDesc>()Lorg/joda/time/DateTime;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Shipment</name></clazz><method><name>getId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Shipment</name></clazz><method><name>getOrderAddressId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Shipment</name></clazz><method><name>getTrackingCarrier</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk$1</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.bigcommerce.BigcommerceSdkTest.givenInvalidCredentialsWhenRetrievingCatalogSummaryThenThrowNewBigcommerceErrorResponseException(com.bigcommerce.BigcommerceSdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/bigcommerce/catalog/models/Pagination</name></clazz><method><name>getLinks</name></method><methodDesc>()Lcom/bigcommerce/catalog/models/Links;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/bigcommerce/BigcommerceSdk$ResponseWaitStrategy</name></clazz><method><name>computeSleepTime</name></method><methodDesc>(Lcom/github/rholder/retry/Attempt;)J</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
